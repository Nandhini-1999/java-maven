name: SonarCloud
# on:
#   push:
#     branches:
#       - master
on:
  workflow_dispatch:
#   workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      working_directory:
        required: false
        type: string
        default: "."
#       project-key:
#         required: false
#         type: string
#         default: ""
#       SONAR_ORGANIZATION:
#         required: false
#         type: string
#         default: "GHA-Demo"
#       SONAR_ORGANIZATION_KEY:
#         required: false
#         type: string
#         default: "gha-demo"
#       SONARQUBE_HOST_URL:
#         required: false
#         type: string
#         default: "sonarcloud.io"
      
jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven 

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey= gha-demo_my-app

#           SONAR_ORGANIZATION: ${{ inputs.SONAR_ORGANIZATION }}
#           SONARQUBE_HOST_URL: ${{ inputs.SONARQUBE_HOST_URL }}
#           SONAR_ORGANIZATION_KEY: ${{ inputs.SONAR_ORGANIZATION_KEY }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=gha-demo_my-app -Dsonar.host.url= ${{ inputs.SONARQUBE_HOST_URL }} -Dsonar.login= ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey= ${{ inputs.project-key }}
          
